name: 'Validation'

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
        
    - name: Terraform fmt check
      run: terraform fmt -check

    - name: Terraform init
      run: |
        cp validatefiles/*.tf .
        terraform init
    
    - name: Terraform validate
      run: terraform validate

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI create MG
      uses: azure/CLI@v1
      with:
        inlineScript: |
          MG_NAME=$(echo mg-$RANDOM)
          echo "MG_NAME=$MG_NAME" >> $GITHUB_ENV
          az account management-group create --name $MG_NAME
    
    - name: Terraform Apply
      run: |
        export ARM_CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r .clientId)
        export ARM_SUBSCRIPTION_ID=$(echo $AZURE_CREDENTIALS | jq -r .subscriptionId)
        export ARM_CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r .clientSecret)
        export ARM_TENANT_ID=$(echo $AZURE_CREDENTIALS | jq -r .tenantId)
        terraform apply -var "management_group_name=${{ env.MG_NAME }}"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Destroy
      run: |
        export ARM_CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r .clientId)
        export ARM_SUBSCRIPTION_ID=$(echo $AZURE_CREDENTIALS | jq -r .subscriptionId)
        export ARM_CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r .clientSecret)
        export ARM_TENANT_ID=$(echo $AZURE_CREDENTIALS | jq -r .tenantId)
        terraform destroy -var "management_group_name=${{ env.MG_NAME }}"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI delete MG
      uses: azure/CLI@v1
      with:
        inlineScript: |
          MG_NAME=$(echo mg-$RANDOM)
          echo "MG_NAME=$MG_NAME" >> $GITHUB_ENV
          az account management-group delete --name $MG_NAME
