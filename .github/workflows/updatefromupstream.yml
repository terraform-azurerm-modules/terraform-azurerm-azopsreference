name: 'Update from upstream'

on:
  workflow_dispatch:
  # Run every Monday at midnight
  schedule:
    - cron: '0 0 * * 1'

env:
  ES_REFERENCE_NAME: wingtip
  GH_CLI_VER: 0.11.1
  GIT_USER_NAME: System
  GIT_USER_EMAIL: noreply@azure.com

jobs:
  update:
    name: Update
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout upstream
      uses: actions/checkout@v2
      with:
        repository: Azure/Enterprise-Scale
        path: es

    - name: Checkout module
      uses: actions/checkout@v2
      with:
        persist-credentials: true
        path: module

    - name: Checkout Enterprise-Scale-Tools
      uses: actions/checkout@v2
      with:
        repository: Azure/Enterprise-Scale-Tools
        token: ${{ secrets.REPO_TOKEN }}
        path: estools

    - name: Display env
      run: |
        env | sort

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Create branch
      run: |
        git checkout -b autoupdate
        git fetch origin
        git reset --hard origin/main
      working-directory: ${{ github.workspace }}/module


    - name: Convert policies.json
      run: |
        Write-Host "==> Installing Az.Accounts PowerShell Module..."
        Install-Module -Name "Az.Accounts" -MinimumVersion "${{ env.az_accounts_minimum_version }}" -Force
        Write-Host "==> Running script..."
        New-Item -Path ${{ github.workspace }} -ItemType directory -Name policyconvert
        ${{ github.workspace }}/scripts/Invoke-LibraryUpdate.ps1 `
          -TargetModulePath ${{ github.workspace }}/policyconvert `
          -SourceModulePath ${{ github.workspace }}/es `
          -UseCacheFromModule
      shell: pwsh

    - name: Convert To Terraform
      run: |
        $GITHUB_WORKSPACE/module/scripts/convertesltlibrary.sh -r "$GITHUB_WORKSPACE/policyconvert" -o "$GITHUB_WORKSPACE/module"
    
    - name: Add changes & create PR
      run: |
        if [ "$(git status -s)" ]; then
          git config --global user.name $GIT_USER_NAME
          git config --global user.email $GIT_USER_EMAIL
          git add *.tf
          git commit -m 'Updated from upstream'
          git push --force -u origin autoupdate
          gh pr create --title "Autoupdate from upstream" --body "Auto-generated PR" --label "system" --reviewer matt-FFFFFF
        fi
      working-directory: ${{ github.workspace }}/module
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
